name: CI

on:
  push:
  pull_request:

jobs:
  mingw-build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-2-mingw-hash-${{ github.sha }}
        restore-keys: ccache-2-mingw-hash-
    - name: Install generic packages
      run: |
        sudo apt-get install -y gawk ccache
        sudo apt-get install -y binutils-mingw-w64-x86-64 gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64
    - name: Build PLUMED
      run: |
        ccache -s -M 100M
        # see https://stackoverflow.com/questions/18138635/mingw-exe-requires-a-few-gcc-dlls-regardless-of-the-code
        ./configure --host=x86_64-w64-mingw32 CXX="ccache x86_64-w64-mingw32-g++" FC=none --disable-shared STATIC_LIBS="-static -static-libgcc -static-libstdc++"
        make -j 4
        ls -ltr src/lib
        file src/lib/plumed.exe
        ccache -s -M 100M
    - uses: actions/upload-artifact@v3
      with:
        name: windows-executable.zip
        path: src/lib/plumed.exe
  wine-regtest:
    runs-on: ubuntu-22.04
    needs: mingw-build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: windows-executable.zip
    - name: Install packages
      run: |
        sudo apt-get install -y wine dos2unix
    - name: Test
      run: |
        PATH="$PWD/bin:$PATH"
        mkdir bin
        mv plumed.exe bin/
        echo "#! /bin/bash"                    >  bin/plumed
        echo "wine $PWD/bin/plumed.exe "'"$@"' >> bin/plumed
        chmod +x bin/plumed
        plumed --help
        export PLUMED_REGTEST_DOS2UNIX=dos2unix
        make -C regtest/basic
    - uses: actions/upload-artifact@v3
      with:
        name: wine-regtest-results.zip
        path: regtest/**/report.txt

  mingw-regtest:
    runs-on: windows-latest
    needs: mingw-build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: windows-executable.zip
    - run: |
        dir
        "PLUMED_PREPEND_PATH=$pwd" >> $env:GITHUB_ENV
    - run: env
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-version: latest
    - run: conda install -y m2-base m2-diffutils m2-sed make
    - run: make -C regtest\basic
    - uses: actions/upload-artifact@v3
      with:
        name: mingw-regtest-results.zip
        path: regtest\**\report.txt
    
